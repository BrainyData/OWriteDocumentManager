;  build a table of contents for all our documents in this group
;  and insert it at the current insertion point

;  first ask if we want to do this
If pCurrentDocumentOnly
	Yes/No message Table of Contents {This action will create a table of contents in the current document and insert it at the current insertion point. Continue?}
	If flag false
		Quit method
	End If
Else
	Yes/No message Table of Contents {This action will create a table of contents for all documents in this document group and insert it at the current insertion point. Continue?}
	If flag false
		Quit method
	End If
End If

;  we encapsulate the whole operation into one undo action (see $endundo below)
;  we must do this prior to disabling updates below
Do ivEdit.$startundo()

;  disable all updates during building (this really speeds things up!!!)
Do OWrite.$disablescreenupdates()
Calculate ivEdit.$holdupdates as kTrue     ;; careful when using this, not all operations will work correctly when doing this (but here it is ok)

If pCurrentDocumentOnly
	;  we only want to insert a table of contents in the current document for the current document
	;  for this purpose we will save the current data and call insertContents without a document name
	Do method saveData (kTrue)     ;; saved data without prompt, this will put the data into fOWriteDoc.data
	Do method insertContents ('',fOWriteDoc.data,kFalse)
Else
	;  loop through our document list and load the data for each document
	;  call our method that inserts the table for one document
	;       ;; Note: do not include the current document
	For curRow from 1 to ivDocumentsList.$linecount step 1
		Working message Building Table of contents (Repeat count) {Documents read...}
		If curRow<>ivDocumentsList.$line
			Do ivDocumentsList.[curRow].$loadcols(seq)
			If seq
				Single file find on fOWriteDoc.seq (Exact match) {seq}
				Do method insertContents (fOWriteDoc.name,fOWriteDoc.data)
			End If
		End If
	End For
	Close working message
End If

;  enable the updates, this will redraw the document
Calculate ivEdit.$holdupdates as kFalse
Do OWrite.$enablescreenupdates()

;  close our undo action and name it
Do ivEdit.$endundo("Insert Table of Contents")