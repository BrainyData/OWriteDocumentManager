;  insert the table

;  encapsulate the undo
Do ivOWriteRef.$startundo()
Do ivOWriteRef.$disablescreenupdates()

If ivFilesMenuList.$line
	;  the user has chosen a file class
	;  prepare the calculation that will fetch the list for the table
	;       ;; our method $evalList requires the file class name and list of fields
	;       ;; $evalList is implemented in our main OWrite window
	Calculate fileClassName as ivFilesMenuList.C1
	Calculate tableCalc as con(fileClassName,';$cinst.$evalList("',fileClassName,'","')
	;       ;; add columns in second parameter for $evalList, seperate each field name with a comma
	For ivColumnDetailsList.$line from 1 to ivColumnDetailsList.$linecount step 1
		Calculate fieldName as con(fileClassName,'.',ivColumnDetailsList.fieldName)
		Calculate tableCalc as con(tableCalc,fieldName,',')
	End For
	;       ;; replace final comma with closing quotes and closing bracked
	Calculate tableCalc as con(mid(tableCalc,1,len(tableCalc)-1),'")')
	
	;  insert the table with our calculation
	Do ivOWriteRef.$::insert(kWriObjTypeTable,tableCalc,kWriBordLine,kWriLineSolid,kBlack,1.00,ivColumns,ivRows,ivColWidth)
Else
	;  insert a table with no link to data
	Do ivOWriteRef.$::insert(kWriObjTypeTable,"",kWriBordLine,kWriLineSolid,kBlack,1.00,ivColumns,ivRows,ivColWidth)
End If

;  set contents of our table cells
;       ;; Note: a table selection range is hiword=row number, loword=column number
;       ;; Note: anything that contains a $ref is a calculation ($ref refers to the list returned to OWrite)
For curRow from 1 to ivRows step 1
	Calculate rowNo as curRow*65536
	;  establish the row type
	If ivHeaderRow&(curRow=1)
		Calculate curRowType as kWriTblRowHeader
	Else If ivFooterRow&(curRow=ivRows)
		Calculate curRowType as kWriTblRowFooter
	Else
		Calculate curRowType as kWriTblRowNormal
	End If
	;  assign cell's text or calculation
	For colNo from 1 to ivColumns step 1
		Switch curRowType
			Case kWriTblRowHeader
				Calculate text as ivColumnDetailsList.[colNo].headerText
			Case kWriTblRowFooter
				Calculate text as ivColumnDetailsList.[colNo].footerText
			Case kWriTblRowNormal
				Calculate text as ivColumnDetailsList.[colNo].rowText
		End Switch
		Do ivOWriteRef.$setselection(rowNo+colNo,rowNo+colNo,ivOWriteRef.$curtblid)     ;; select current cell
		If pos('$ref',text)
			Do ivOWriteRef.$curobjdata.$assign(text)
		Else
			Do ivOWriteRef.$::insert(kWriObjTypeText,text)
		End If
	End For     ;; colNo from 1 to ivColumns step 1
	;  select all columns in current row
	Do ivOWriteRef.$setselection(rowNo+0,rowNo+0,ivOWriteRef.$curtblid)
	;  assign the row type
	Do ivOWriteRef.$curtblrowtype.$assign(curRowType)
	;  set fill color etc for our header and footer rows
	Switch curRowType
		Case kWriTblRowHeader
			Do ivOWriteRef.$curobjfillcolor.$assign(kGray)     ;; set first rows background to gray
			Do ivOWriteRef.$curbold.$assign(kTrue)     ;; make first rows text bold
		Case kWriTblRowFooter
			Do ivOWriteRef.$curobjfillcolor.$assign(kYellow)     ;; set footer row's background to yellow
			Do ivOWriteRef.$curbold.$assign(kTrue)     ;; make footer row text bold
		Case kWriTblRowNormal
			;  we keep the default
	End Switch
End For     ;; curRow from 1 to ivRows step 1

;  close the undo
Do ivOWriteRef.$enablescreenupdates()
Do ivOWriteRef.$endundo("Insert Table")