On evMouseDown     ;; Event Parameters - pRow( Itemreference )
	;  build list of numbered list options     ;; we use +100 for ID as numbers below 100 are reserved by OWrite
	Do lMenuList.$define(lMenuItemText,lMenuItemID,lMenuItemFlags)
	Do lMenuList.$add("1. Decimal number with dot",kWriListDecimalD+100,kWriMenuItemEnabled)
	Do lMenuList.$add("1) Decimal number with parenthesis",kWriListDecimalP+100,kWriMenuItemEnabled)
	Do lMenuList.$add("A. Upper case alpha characters with dot",kWriListAlphaUD+100,kWriMenuItemEnabled)
	Do lMenuList.$add("A) Upper case alpha characters with parenthesis",kWriListAlphaUP+100,kWriMenuItemEnabled)
	Do lMenuList.$add("a. Lower case alpha characters with dot",kWriListAlphaLD+100,kWriMenuItemEnabled)
	Do lMenuList.$add("a) Lower case alpha characters with parenthesis",kWriListAlphaLP+100,kWriMenuItemEnabled)
	Do lMenuList.$add("ii. Lower case roman numerals with dot",kWriListRomanLD+100,kWriMenuItemEnabled)
	Do lMenuList.$add("II. Uper case roman numerals with dot",kWriListRomanUD+100,kWriMenuItemEnabled)
	;  search and select current setting
	Calculate x as iFRefOWrite.$curlisttype+100
	Do lMenuList.$search($ref.lMenuItemID=x,1,0,0,0) Returns lMenuList.$line
	If lMenuList.$line
		Calculate lMenuList.lMenuItemFlags as kWriMenuItemEnabled+kWriMenuItemChecked
	End If
	;  popup menu and set list type
	Do OWrite.$popupmenulist($cfield.$framehwnd,lMenuList,kTrue,0,0) Returns lMenuItemID
	If lMenuItemID
		Do iFRefOWrite.$startundo()
		Do iFRefOWrite.$curlisttype.$assign(lMenuItemID-100)
		Do iFRefOWrite.$endundo("Numbered List")
	End If
	Quit event handler (Discard event)