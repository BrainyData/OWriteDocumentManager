If cvExportSelected
	Calculate lDocName as con(ivGroupName,' Documentation')
Else
	Calculate lDocName as con(ivGroupName,' - ',ivDocName)
End If
Switch cvOption
	Case kDestOWriteBinary
		Calculate lExtension as pick(cvOWriteBinarySaveAsList,'owr','owx')     ;; CHANGE_2015_11_03__1
	Case kDestPlainText
		Calculate lExtension as 'txt'
	Case kDestUnicodeText
		Calculate lExtension as 'utxt'
	Case kDestRTF
		Calculate lExtension as 'rtf'
	Case kDestHTML
		Calculate lExtension as 'html'
	Case kDestCustom     ;; CHANGE_2013_11_27_1
		Calculate lExtension as 'plist'
End Switch

If cvExportSelected
	Set reference ivOWrite to ivOWriteObj.$ref     ;; we use our NV Obj to load and export documents
	Begin reversible block
		Set current list cvDocsList
	End reversible block
	For each line in list (Selected lines only) from 1 to #LN step 1
		Working message Processing/-1073735804,-1073735800;50;0;60 (Repeat count) {Exporting documents...}
		Single file find on fOWriteDoc.seq (Exact match) {cvDocsList.seq}
		If flag true
			If lFirst
				Calculate lFirst as kFalse
				Do FileOps.$selectdirectory(lPath,'Select destination folder')
				Calculate ivExportPath as con(lPath,sys(9))
			End If
			Calculate lPath as con(ivExportPath,cvDocsList.name,'.',lExtension)
			Do ivOWriteObj.$loaddata(fOWriteDoc.data,kWriFmtDefault)
			Do method exportOneDoc (lPath,fOWriteDoc.name)
		End If
	End For
	Close working message
Else
	Do method validatePath (lDocName)     ;; CHANGE_2015_02_19__1
	Calculate lPath as con(lDocName,'.',lExtension)
	Do FileOps.$putfilename(lPath,'Export single document') Returns ok
	If ok
		Do FileOps.$splitpathname(lPath,_drive,_dir,_name,_ext)
		Calculate ivExportPath as con(_drive,_dir)
		Do method exportOneDoc (lPath)
	End If
End If