;  load some sample data
Set reference lRef to ivEdit.$inst
Do lRef.$loadsampledata()
;  evaluate the document, but don't show it
Calculate ivEdit.$holdupdates as kTrue
Calculate ivEdit.$evalcalcs as kTrue
;  prepare our mime list for the OWrite export to html
;  the method $owrite_export will be called for images
If tvStudio4
	Do ivMimeList.$define(lLevel,lContentType,lContentSubType,lFileName,lCharData,lBinData,lCharSet,lEncoding,lDisposition)
Else
	Do ivMimeList.$define(lLevel,lContentType,lContentSubType,lFileName,lCharData,lBinData,lCharSet,lEncoding)
End If
;
;
;  start the OWrite HTML export     ;; set OWrite to local context so that our $owrite_export method is called instead
;  after the $savedata call for html our mime list will contain the images (if there were any)
Calculate savedEvalLocal as ivEdit.$evallocal
;  get html
Calculate ivEdit.$evallocal as kTrue
Do ivEdit.$savedata(lHtmlData,kWriFmtHTML,kTrue,kWriHtmlNoMargins,kFalse,kWriHtmlSizeAdjust,kFalse)
Calculate ivEdit.$evallocal as savedEvalLocal
;  get plain text
Do ivEdit.$savedata(lPlainTextData,kWriFmtText,kTrue)

If tvIsUnicode     ;; are we running a unicode Omnis
	;  for unicode OWrite generates UTF-8
	Calculate lHtmlEncoding as "UTF-8"
	;  but SMTPSend still requires the characters in UTF32, so we must convert them here
	Calculate lHtmlData as utf8tochar(lHtmlData)
Else
	;  for non-unicode OWrite generates "ISO-8859-1"
	Calculate lHtmlEncoding as "ISO-8859-1"
End If

If ivMimeList.$linecount
	;  the document contained some images, so we have to do things different (in reverese)
	;
	;  add the html to the mime list before the images
	Do ivMimeList.$addbefore(1,2,'text','html','',lHtmlData,#NULL,lHtmlEncoding)
	;  add the plain text before the html
	Do ivMimeList.$addbefore(1,2,'text','plain','',lPlainTextData)
	;  add multipart rows to the beginning
	Do ivMimeList.$addbefore(1,1,'multipart','alternative')
	Do ivMimeList.$addbefore(1,0,'multipart','related')
	;  NOTE (kindly provided by Geert Landuyt):
	;       ;; When we have file attachements instead of adding multipart-related we should
	;       ;; add multipart-mixed and add the attachement at scope 1 the same as the images
	;  Example:
	;       ;; ivMimeList.$addbefore(1,1,'application','octet-stream',filename,,binary,,)
	;       ;; ivMimeList.$addbefore(1,2,'text','html','',lHtmlData,#NULL,lHtmlEncoding)
	;       ;; ivMimeList.$addbefore(1,2,'text','plain','',lPlainTextData)
	;       ;; ivMimeList.$addbefore(1,1,'multipart','alternative')
	;       ;; ivMimeList.$addbefore(1,0,'multipart','mixed')
Else
	;  if we have no images live is simple, just add alternative content plain text and html
	;
	Do ivMimeList.$add(0,'multipart','alternative')
	Do ivMimeList.$add(1,'text','plain','',lPlainTextData)
	Do ivMimeList.$add(1,'text','html','',lHtmlData,#NULL,lHtmlEncoding)
End If
;
;
;  now send the mail     ;; make several attempts (rare Studio 6 / OS X 10.7.5 issue)
For attempts from 1 to 20 step 1
	SMTPSend (cvServer,cvFrom,cvTo,cvSubject,ivMimeList,cvCC,cvBCC,,$cinst.$smtpstatusproc,,,cvServerUserName,cvServerPassword) Returns status
	If not(status)
		Close working message
		Break to end of loop
	Else
		Working message Sending E-Mail (Repeat count) {sending email failed...trying again}
		Calculate time as #CT
		While abs(#CT-time)<60
		End While
	End If
End For

;  restore OWrite
Calculate ivEdit.$evalcalcs as kFalse
Calculate ivEdit.$holdupdates as kFalse

If (status)
	OK message Send Mail {An error prevented the mail from being send. The error code returned by SMTPSend was [status].}
End If