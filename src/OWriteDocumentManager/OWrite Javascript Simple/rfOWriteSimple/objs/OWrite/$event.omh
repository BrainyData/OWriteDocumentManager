
On evFirstLoad     ;; load the document when the control is ready after initialization
	Do $cinst.$objs.OWrite.$loaddata()
	
On evModified
	Do $cinst.$objs.btnSaveChanges.$enabled.$assign(kTrue)
	
On evSaveData     ;; the save data task has been completed and all data is stored in ivDocument
	;  see evAsyncDone for next action
	;       ;; saving data is an async operation which generates an async event with the async id that was specified when $savedata was called
	
On evSaveDataError     ;; an error occured during the save data task
	OK message Error {[pMessage] // [pStack]}
	
On evAsyncDone
	Switch pAsyncId
		Case 'save'
			Do method $cinst.$serverSaveData
		Case 'merge'
			Do method $cinst.$serverMergeData
		Case 'clear'
			Do method $cinst.$serverClearData
		Case 'print'
			Do method $cinst.$serverPrintData
		Case 'replace_all'
			Do method $serverReplaceAll (pAsyncData.C1,pAsyncData.C2)
			;  JavaScript: console.log("async done");console.log(objCalc);
	End Switch
	Do $cinst.$objs.OWrite.$setfocus()     ;; new function to set focus to document in iframe
	
On evOpenContextMenu     ;; change20181218_1
	Do method $cinst.$handleOpenContextMenu (pContextMenu,$cfield)
	
On evExecuteContextMenu     ;; change20181218_1
	Do method $cinst.$handleExecContextMenu (pCommandID,$cfield.$curobjtype)
	
On evGetDataFromSrc     ;; (parameters are (pObjID, pObjName and pObjCalc which comes from the ObjDataSrc property) change20190207_1
	If pObjName="HeaderBanner"
		;  if external source is the header banner, we have already cached the image data (no need to evaluate pObjCalc)
		Do $cinst.$objs.OWrite.$setdatafromsrc(pObjID,ivSampleHeaderBanner.pngImage)
	End If